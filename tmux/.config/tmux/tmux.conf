# vim style tmux config
set -s escape-time 5
set-option -g history-limit 20000
set-option -g detach-on-destroy off

# Needed to trigger autoread event in vim
set -g focus-events on
# use C-a, since it's on the home row and easier to hit than C-b
unbind C-b
set-option -g prefix C-a
bind C-a send-keys 'C-a'
# unbind-key C-a
# bind-key C-a send-prefix
# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0
set -g base-index 1

# Set window notifications
setw -g monitor-activity off
set -g visual-activity on

set-option -g allow-passthrough on

# Enable native Mac OS X copy/paste
#set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"


bind-key -r G run-shell "/Users/jgarcia/.local/share/nvim/site/pack/packer/start/harpoon/scripts/tmux/switch-back-to-nvim"


# bind-key -r Space run-shell -bC "~/.config/bin/history"


# vi is good
# setw -g mode-keys vi
set-window-option -g mode-keys vi

# mouse behavior
setw -g mouse on


bind-key -n C-F3 set-option -g status #Ctrl+F3 Combo
bind-key x kill-pane

#Before
# set-option -g default-terminal screen-256color
# set-option -g default-terminal xterm-256color
# set -g default-terminal "rxvt-unicode-256color
# set-option -g default-terminal "xterm-256color"
# set -g default-terminal alacritty
# set-option -g default-terminal screen-256color
set -g default-terminal xterm-kitty

# set -g default-terminal "screen-256color"

# set-option -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-256color*:Tc"

set -as terminal-features ",*:RGB" # <-- this is the important line
# set-option -sa terminal-overrides ',screen-256color:RGB'

# support undercul in iTerm2 and friends
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Undercurl
# set -g default-terminal "tmux-256color"

# Enable 24 bit true colors
# set -ga terminal-overrides ',*:RGB'

# Enable undercurl
# set -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# #
# # # Enable undercurl colors
# set -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


#avoid annoying window renaming
set-option -g allow-rename off

bind u run-shell "open #{pane_current_path}"
bind -r e kill-pane -a

bind-key : command-prompt
# bind-key r refresh-client
bind-key L clear-history


unbind o
bind-key o resize-pane -Z
# bind -r o select-pane -t .+1 \;  resize-pane -Z
bind -r Space select-pane -t .+1
bind -r bspace select-pane -t .+1 \;  resize-pane -Z

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# bind-key space swap-pane -U
# bind-key bspace swap-pane -D

# bind-key space next-pane -U
# bind-key bspace previous-pane -D

# bind j switch-client -n
# bind k switch-client -p

# bind-key l next-window
# bind-key h previous-window

#bind-key enter next-layout


bind-key 0 choose-session


bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-l' select-pane -R



# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l


# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#   "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#   bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

# bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+


# ## Start Previously uncommented
# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#         | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#         bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
#         bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
#         bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
#         bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#   "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# ## End Previously uncommented



# bind C-l send-keys 'C-l'

# bind-key C-e split-window -v -p 20 -c "#{pane_current_path}"
setenv -g PATH "$HOME/bin:$PATH"


# bind-key C-e capture-pane -eJS - \;
#     run-shell 'TTF=$(mktemp);
#         tmux save-buffer $TTF;
#         tmux delete-buffer;
#         tmux split-window -Z sh -c "(bat $TTF)"
#         '

# bind-key C-e capture-pane -eJS - \;
#     run-shell 'TTF=$(mktemp);
#         tmux save-buffer $TTF;
#         tmux delete-buffer;
#         tmux split-window -Z sh -c "(nvim $TTF; rm $TTF)"
#         '

# Easy config reload
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."
# bind C-e capture-pane -e \; save-buffer ~/tmux-logs \; delete-buffer

# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

unbind C-o
bind-key r rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
# set-window-option -g window-status-current-style fg=magenta
set-window-option -g window-status-current-style fg=#B4BEFE

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
# bind-key t next-window
# bind-key T previous-window

# bind-key C-q copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
# bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# bind-key C-e run-shell "vim-edit-tmux-output"
bind-key L run-shell "vim-edit-tmux-output"

# bind-key Enter choose-session
bind-key Enter copy-mode
# bind-key [ copy-mode
# bind Enter run-shell 'kitty @ kitten /Users/jgarcia/.local/share/nvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py --env "TMUX=$TMUX" --env "TMUX_PANE=#{pane_id}"'


## Old config
# more settings to make copy-mode more vim-like
#unbind [
#bind Escape copy-mode
#unbind p
#bind p paste-buffer
#bind -T copy-mode-vi v send -X begin-selection

if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
    bind C-c run 'tmux save-buffer - | pbcopy'; \
    bind C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

# Moving window
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1

# Moving panes
bind-key -n C-S-Down resize-pane -D 5
bind-key -n C-S-Up resize-pane -U 5
bind-key -n C-S-Left resize-pane -L 5
bind-key -n C-S-Right resize-pane -R 5



# bind-key -n C-, display-popup -E "\
#     tmux list-sessions -F '#{#{session_activity},#{session_name}}' |\
#     sort -r |\
#     sed '/^$/d' |\
#     cut -d',' -f2- \|
#     fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}' |\
#     xargs tmux switch-client -t"


# bind-key -n C-, run-shell "tmux neww tmux-session-switcher"

## ctrl+, is binded in Iterm to (prefix) + 8
bind-key -r 8 run-shell "tmux neww tmux-session-switcher"

## cmd+u, is binded in Iterm to (prefix) + f
bind-key -r f run-shell "tmux neww tmux-sessionizer"

## cmd+0, is binded in Iterm to (prefix) + 9
bind-key -r 9 run-shell "tmux neww tmux-projects"


# Toggle pane maximasize
# bind-key -n C-S-Down resize-pane -D 4

bind-key T display-popup "tt"
# set-option -g detach-on-destroy off

# # Status bar settings adapted from powerline
# set -g status-justify centre # center align window list
# set -g status on
# set -g status-interval 10
# set -g status-fg colour232
# set-option -g status-style bg=default
# set -g status-left-length 140
# set -g status-left ''
# # set -g status-right ''
# # set -g status-left '#[fg=#3B4252]#[nobold]#[fg=#c6c6c6]#[bg=#3B4252] #S #[fg=#3B4252]#[bg=default]#[nobold]#[bg=default] '
# set -g status-right '#[fg=#3B4252]#[nobold]#[fg=#c6c6c6]#[bg=#3B4252] #S #[fg=#3B4252]#[bg=default]#[nobold]#[bg=default] '
#
# set -g status-right-length 455
# # set -g window-status-format "#[fg=#81A1C1,bg=default]#[fg=black,bg=#81A1C1]#I #[fg=#c6c6c6,bg=#3B4252] #W#[fg=#3B4252,bg=default]"
# # set -g window-status-current-format "#[fg=#4EC9B0,bg=default]#[fg=black,bg=#4EC9B0]#I #[fg=#c6c6c6, bg=#3B4252] #W#[fg=#3B4252,bg=default,nobold]"
# set -g window-status-format "#[fg=#c6c6c6,bg=default]#[fg=black,bg=#c6c6c6]#I #[fg=#c6c6c6,bg=#3B4252] #W#[fg=#3B4252,bg=default]"
# set -g window-status-current-format "#[fg=#81A1C1,bg=default]#[fg=black,bg=#81A1C1]#I #[fg=#c6c6c6, bg=#3B4252] #W#[fg=#3B4252,bg=default,nobold]"
# #81A1C1
# # set -g window-status-current-format "#[fg=#c6c6c6,bg=default]#[fg=black,bg=#c6c6c6]#I #[fg=#c6c6c6, bg=#3B4252] #W#[fg=#3B4252,bg=default,nobold]"
# # set -g window-status-current-format "#[fg=#81A1C1,bg=default]#[fg=black,bg=#81A1C1]#I #[fg=#c6c6c6, bg=#3B4252] #W#[fg=#3B4252,bg=default,nobold]"
# set -g window-status-last-style fg=colour31
#
#
# set -g pane-border-style "bg=default fg=#3b4252"
# set -g pane-active-border-style "bg=default fg=#3b4252"





############# new approach
##Status bar settings adapted from powerline
# set -g status-justify centre # center align window list
# set -g status-position top 
set -g status-position bottom
set -g status on
set -g status-fg red
set-option -g status-style bg=default
set -g status-left-length 400
# set -g window-status-last-style fg=colour31
# set -g status-left '#[fg=colour50] [#S]  '
# set -g status-left ''
# set -g status-right '#[fg=#3B4252]#[nobold]#[bg=#3B4252] #[fg=#c6c6c6]#[bg=#3B4252]#S '
# set -g status-right '#[fg=#3B4252]#[bg=#3B4252]#[fg=#c6c6c6]#[bg=#3B4252]#S#[fg=#3B4252, bg=default]#[nobold]'
# set -g status-left '#[fg=#4EC9B0]#[bg=#default]#S'

# set -g status-left '#[fg=cyan][#S] #(if [#(#S) != #(#(basename #{pane_current_path}))]; then echo "hi"; fi;)'
set -g status-left '#[fg=cyan][#S] #(if test #S != $(basename #{pane_current_path}); then echo "($(basename #{pane_current_path}))"; fi;)'
# set -g status-left '#[fg=cyan][#S] #(basename #{pane_current_path}) #(if true; then echo "hi"; fi;)'
# set -g status-left "#[fg=cyan][#(basename #{pane_current_path})]" # session name
# tmux display -p "$(basename `pwd`)"
set -ga status-left '#[fg=#CBA6F7]#(if git rev-parse --abbrev-ref --symbolic-full-name HEAD | grep -q HEAD; then echo " 🏷 $(git describe --tags)"; fi) #[fg=white] #(gitmux -cfg $HOME/.config/tmux/gitmux.conf "#{pane_current_path}")  '
# set -ga status-left "#[fg=white,nobold]#(gitmux -timeout 300ms -cfg $HOME/.config/tmux/gitmux.conf) "
# set -g status-right '#(gitmux -cfg .gitmux.conf "#{pane_current_path}")'
# set -g status-right '#(gitmux -cfg $HOME/.config/tmux/gitmux.conf "#{pane_current_path}")'
# set -g status- '#(gitmux -cfg $HOME/.config/tmux/gitmux.conf "#{pane_current_path}")'

set -g status-right-length 300
set -g status-right ''
# set -g window-status-current-format "#[fg=colour50]#I#[fg=colour50]:#W"
# set -g window-status-current-format "#[fg=#4EC9B0]#I#[fg=#4EC9B0]:#W #[fg=colour50]#F"
# set -g window-status-current-format "#[fg=#4EC9B0]#I#[fg=#4EC9B0]:#[fg=colour50]#F#W "
# set -g window-status-format "#[fg=#3B4252]#I:#[fg=#3B4252]#W"
# set -g window-status-current-format "#[bg=#3B4252]#[nobold] #[fg=#c6c6c6,bg=#3B4252]#I#[fg=#c6c6c6, bg=#3B4252]:#W #[fg=#3B4252, bg=default]#[nobold]"
# set -g window-status-current-format "#[fg=#3B4252]#[fg=#c6c6c6,bg=#3B4252]#I#[fg=#c6c6c6, bg=#3B4252]:#W#[fg=#3B4252, bg=default]#[nobold]"


# set -g window-status-current-format "#[fg=colour50]#F#[fg=#4EC9B0]#W"
# set -g window-status-current-format "#[fg=#4EC9B0]#F#[fg=#4EC9B0]#W"

# set -g window-status-format "#[fg=#3B4252]#I:#[fg=#3B4252]#W"
# set -g window-status-current-format "#[fg=cyan]#I#[fg=cyan]:#W#[fg=colour50, bold]#F "
# set -g window-status-current-format "#[fg=#4EC9B0]#I#[fg=#4EC9B0]:#W#[fg=colour50, bold]#F "
# set -g window-status-format "#[fg=#3B4252]#W"

# set -g window-status-format "#[fg=#3B4252]#I:#[fg=#3B4252]#W"
# set -g window-status-current-format "#[fg=cyan]#I#[fg=cyan]:#W"


set -g pane-border-style "bg=default fg=#3b4252"
# set -g pane-active-border-style "bg=default fg=#3b4252"
# set -g pane-active-border-style "fg=#F5C2E7"
# set -g pane-active-border-style "fg=#B4BEFE"
# set -g pane-active-border-style "fg=#F5E0DC"
set -g pane-active-border-style "fg=#89ddff"
set -g mode-style "fg=default,bg=#264F78"
#
# Custom status bar
# Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
# set -g status-left-length 32
# set -g status-right-length 150
#
# set -g status-right '#[fg=colour245]⮃ %R ⮃ %d %b #[fg=colour254,bg=colour234,nobold]#()⮂#[fg=colour16,bg=colour254,bold] #h '
#
# set -g window-status-format "#[fg=colour245,bg=colour234] #I ⮁ #W "
# set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour16,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"

set -g message-style 'fg=cyan bg=default bold'
# set -g status-interval 2
set -g status-interval 1

# set -g status-left "#[fg=cyan,bg=default]#S " # session name
# set -ga status-left '#[fg=white]#(gitmux -cfg $HOME/.config/tmux/gitmux.conf "#{pane_current_path}")  '
# set -g window-status-format "#[fg=#3B4252,bg=default]#I#[fg=#3B4252,bg=default]:#W"
# set -g window-status-current-format "#[fg=#4EC9B0]#I#[fg=#4EC9B0]:#W#[fg=colour50, bold]#F"
# set -g window-status-current-format "#I:#W#[fg=magenta]#F"
# set -g window-status-format "#[fg=#c6c6c6,bg=default]#[fg=black,bg=#c6c6c6]#I #[fg=#c6c6c6,bg=#3B4252] #W#[fg=#3B4252,bg=default]"
# set -g window-status-current-format "#[fg=#81A1C1,bg=default]#[fg=black,bg=#81A1C1]#I #[fg=#c6c6c6, bg=#3B4252] #W#[fg=colour50, bold]#F#[fg=#3B4252,bg=default,nobold]"


# set -g window-status-format "#[fg=#c6c6c6,bg=default]#[fg=black,bg=#c6c6c6]#I #[fg=#c6c6c6,bg=#3B4252] #W#[fg=#3B4252,bg=default]"
# set -g window-status-current-format "#[fg=#81A1C1,bg=default]#[fg=black,bg=#81A1C1]#I #[fg=#c6c6c6, bg=#3B4252] #W#[fg=colour50, bold]#F#[fg=#3B4252,bg=default,nobold]"


## good one
# set -g window-status-format "#[fg=#3B4252,bg=default]#I-#[fg=#3B4252,bg=default]#[fg=#3B4252,bg=default]#W"
# set -g window-status-current-format "#[fg=#4EC9B0,bg=default]#I-#[fg=#4EC9B0]#W#[fg=colour50]#F"
# set -g window-status-format "#[fg=#3B4252,bg=default]#I:#[fg=#3B4252,bg=default]#[fg=#3B4252,bg=default]#W"
# set -g window-status-current-format "#I:#W#[fg=#B4BEFE]#F"



# set -g window-status-format "#[fg=#3B4252,bg=default]#W"
# set -g window-status-current-format "#W#[fg=#B4BEFE]#F"
# set -g window-status-format "#[fg=#3B4252,bg=default]#[fg=#3B4252,bg=default]#W"
set -g window-status-format "#[fg=#3b4261,bg=default]#[fg=#3b4261,bg=default]#W"
set -g window-status-current-format "#W#F"


set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# set -g window-status-current-format "#[fg=#C586C0]*#W"
# set -g window-status-current-format "*#W"
# open tmux-fzf-url in a tmux v3.2+ popup
set -g @fzf-url-fzf-options '--multi -0 --no-preview --no-border --color=bg+:#264F78,hl:#569CD6,hl+:#569CD6,gutter:-1'

# Default value in tmux >= 3.2
TMUX_FZF_OPTIONS="-p -w 90% -h 55% -m"


set -g default-shell /bin/zsh
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'IngoMeyer441/tmux-easy-motion'
# set -g @easy-motion-prefix "Space"
# set -g @tmux_power_theme '#82A1C1'
# set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'catppuccin/tmux'
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'ddzero2c/tmux-easymotion'
# run -b '~/.tmux/plugins/tpm/tpm'

# set-option -g @fingers-compact-hints 0
# set-option -g @fingers-backdrop-style "fg=grey"
# set -g @plugin 'Morantron/tmux-fingers'

# set-option -g @copytk-copy-command "pbcopy"
# set -g @plugin 'CrispyConductor/tmux-copy-toolkit'


# set-option -g @extrakto_grab_area "window full"
# set-option -g @extrakto_popup_size "75%,50%"
# set-option -g @extrakto_filter_order "line word"
# set-option -g @extrakto_insert_key ctrl-i
# set-option -g @extrakto_popup_size "90%,40%"
# set-option -g @extrakto_open_tool "/opt/homebrew/bin/nvim"
# set-option -g @extrakto_open_tool /opt/homebrew/bin/nvim
# set-option -g @extrakto_popup_size "70%"


# set -g @jump-fg-color '\e[1m\e[31m'
# set -g @plugin 'laktak/extrakto'


# set -g @jump-key 'J'
# set -g @plugin 'schasse/tmux-jump'
# set -g @jump-bg-color '\e[0;37m'

set-option -g @fastcopy-key i
set-option -g @fastcopy-action pbcopy  # for macOS
set-option -g @fastcopy-regex-word-no-spaces "\\S*"
set -g @plugin 'abhinav/tmux-fastcopy'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'

# set -g @plugin 'ddzero2c/tmux-easymotion'

# set -g @plugin 'IngoMeyer441/tmux-easy-motion'
# set -g @easy-motion-prefix "Space"
# set -g @easy-motion-default-motion "bd-w"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

