set -g base-index 1
setw -g monitor-activity off
set -g visual-activity off
set -s escape-time 5
# Needed to trigger autoread event in vim
set -g focus-events on
set -g set-clipboard on
set-option -g history-limit 20000
set-option -g detach-on-destroy off
set-option -g repeat-time 0
set-option -g prefix C-a
bind C-a send-keys 'C-a'

set -gq allow-passthrough on
# set -ga update-environment TERM
# set -ga update-environment TERM_PROGRAM
set-window-option -g mode-keys vi
setw -g mouse on
set -s extended-keys on
# set-option -g extended-keys on
set-option -g allow-rename off
set -g default-terminal "xterm-kitty"
set -as terminal-features 'xterm*:extkeys'
set -as terminal-features ",*:RGB" # <-- this is the important line

# cursor shape :h gui-cursor in neovim
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# tell Tmux that outside terminal supports true color
# set-option -ga terminal-overrides ',xterm-kitty:cnorm=\E[?12h\E[?25h'


############## Bindings #################
bind-key -r G run-shell "/Users/jgarcia/.local/share/nvim/site/pack/packer/start/harpoon/scripts/tmux/switch-back-to-nvim"
bind-key -n C-F3 set-option -g status #Ctrl+F3 Combo
bind-key x kill-pane
bind u run-shell "open #{pane_current_path}"
bind -r e kill-pane -a
# use C-a, since it's on the home row and easier to hit than C-b
unbind C-b

bind-key : command-prompt
# bind-key r refresh-client
bind-key L clear-history


unbind o
bind-key o resize-pane -Z
# bind -r o select-pane -t .+1 \;  resize-pane -Z
bind -r Space select-pane -t .+1
bind -r bspace select-pane -t .+1 \;  resize-pane -Z

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# bind-key space swap-pane -U
# bind-key bspace swap-pane -D

# bind-key space next-pane -U
# bind-key bspace previous-pane -D

# bind j switch-client -n
# bind k switch-client -p

# bind-key l next-window
# bind-key h previous-window

#bind-key enter next-layout


bind-key 0 choose-session


bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


bind C-l send-keys 'C-l'

# setenv -g PATH "$HOME/bin:$PATH"


# Easy config reload
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."
unbind C-o
bind-key r rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=#B4BEFE

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
# bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# bind-key C-e run-shell "vim-edit-tmux-output"
bind-key L run-shell "vim-edit-tmux-output"

bind-key y run-shell "move-current-pane-into-session"


bind-key Enter copy-mode
# bind-key [ copy-mode
# bind Enter run-shell 'kitty @ kitten /Users/jgarcia/.local/share/nvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py --env "TMUX=$TMUX" --env "TMUX_PANE=#{pane_id}"'


## Old config
if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
    bind C-c run 'tmux save-buffer - | pbcopy'; \
    bind C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

# Moving window
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1

# Moving panes
bind-key -n C-S-Down resize-pane -D 5
bind-key -n C-S-Up resize-pane -U 5
bind-key -n C-S-Left resize-pane -L 5
bind-key -n C-S-Right resize-pane -R 5


## ctrl+, is binded in Kitty to (prefix) + 8
bind-key -r 8 run-shell "tmux neww tmux-session-switcher"

## cmd+u, is binded in Kitty to (prefix) + f
bind-key -r f run-shell "tmux neww tmux-sessionizer"

## cmd+0, is binded in Kitty to (prefix) + 9
bind-key -r 9 run-shell "tmux neww tmux-projects"


# Toggle pane maximasize
# bind-key -n C-S-Down resize-pane -D 4

bind-key T display-popup "tt"
# set-option -g detach-on-destroy off



############# Status Bar Config #############
set -g status-position bottom
set -g status on
set -g status-fg red
set-option -g status-style bg=default
set -g status-left-length 400
set -g status-left '#[fg=cyan]#(if true; then echo "$(echo #{pane_current_path} | awk -F"/" "{print \$(NF-1)\"/\"\$NF}")"; fi;)'
set -ga status-left '#[fg=#CBA6F7]#(if cd #{pane_current_path} && git rev-parse --abbrev-ref --symbolic-full-name HEAD | grep -q HEAD; then echo " 🏷 $(git describe --tags)"; fi) #[fg=white] #(gitmux -cfg $HOME/.config/tmux/gitmux.conf "#{pane_current_path}")  '
set -g status-right-length 300
set -g status-right '#[fg=#F2CDCD] #{?#{pane_ssh_connected},[#U@#H],''}  #[fg=cyan]#S #{?#{window_zoomed_flag},*Z,}'
set -g pane-border-style "bg=default fg=#3b4252"
set -g pane-active-border-style "fg=#89ddff"
set -g mode-style "fg=default,bg=#264F78"
set -g message-style 'fg=cyan bg=default bold'
set -g status-interval 1
set -g window-status-format "#[fg=#3b4261,bg=default]#[fg=#3b4261,bg=default]#W"
set -g window-status-current-format "#W#F"

set -g @fzf-url-fzf-options '--multi -0 --no-preview --no-border --color=bg+:#264F78,hl:#569CD6,hl+:#569CD6,gutter:-1'

# Default value in tmux >= 3.2
TMUX_FZF_OPTIONS="-p -w 90% -h 55% -m"


set -g default-shell /bin/zsh


